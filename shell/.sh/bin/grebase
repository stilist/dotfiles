#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

script_pwd="$(dirname "$0")"
. "$script_pwd/../support/git_in_initialized_repo.sh"
git_in_initialized_repo || exit 1

###
# `grebase`
#
# Wrap `git pull --rebase` for convenience. `grebase` makes it easier to rebase
# the current branch on top of changes on a remote.
#
# @example Rebase on top of the 'master' branch on the remote 'upstream'
#   grebase upstream master
# @example Rebase on top of the 'feature/add-widget' branch on the remote 'origin'
#   grebase feature/add-widget
# @example Rebase on top of the branch on the remote 'origin' that matches the current branch
#   grebase
###

# `grebase origin master`
set +u
if [ -n "$2" ] ; then
  branch=$2
  remote=$1
# `grebase master`
else
  branch="$1"
  remote="origin"
fi
set -u

# `grebase`
if [ -z "$branch" ] ; then
  . "$script_pwd/../support/git_current_branch.sh"
  branch=$(git_current_branch)
fi

git pull --rebase "$remote" "$branch"
