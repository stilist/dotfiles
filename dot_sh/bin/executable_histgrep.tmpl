#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

###
# `histgrep`
#
# Search the history files created by `session/history.sh`.
#
# @example Find all history matching 'ssh'
#   histgrep ssh
# @example Display the most recent command in history matching 'ssh'
#   histgrep ssh | grep -v histgrep | tail -1 | cut -d ' ' -f 2-
# @see https://twitter.com/michaelhoffman/status/639226401015525376
# @see https://stackoverflow.com/a/981831/672403
###

export GREP_COLOR='1;33' # yellow

DATA_HOME="${XDG_DATA_HOME:-$HOME/.local/share}"
HISTDIR="${HISTDIR:-${DATA_HOME}/history}"

script_pwd="$(dirname "${0}")"
support_path="${script_pwd}/../support"

my_name="$(basename "${0}")"
usage="$(cat <<EOM
Search and filter shell command history. Use this together with \e[1msession/history.sh\e[0m.

Usage: ${my_name} QUERY

Flags:
\t-0\tprint matches separated by the NUL (0x0) character instead of a newline
\t-h\tdisplay this help message
\t-l\tprint the paths for history files that match the query
\t-n NUM\treturn at most NUM results
\t-r\tprint results in descending order (newest to oldest)

Example:
\t${my_name} ssh
\t${my_name} '\\\b[[:alpha:]]at\\\b' # matches both 'bat' and 'cat' tools
\t${my_name} -n 10 'ln -s'
\t${my_name} -0 -l openssl
EOM
)"

maximum_results=
print_filenames=true
print_matches=true
reverse_results=false
use_null_terminator=false

. "${support_path}/fail_with_usage.sh"
while getopts '0hln:r' OPTION ; do
  case "${OPTION}" in
  0)
    use_null_terminator=true
    ;;
  h)
    fail_with_usage "${usage}"
    ;;
  l)
    print_matches=false
    ;;
  n)
    maximum_results="${OPTARG}"
    if ! [[ "${maximum_results}" =~ ^[0-9]+$ ]] ; then
      fail_with_usage "${usage}" "The NUM given for '-n NUM' must be a non-negative integer."
    fi
    ;;
  r)
    reverse_results=true
    ;;
  ?)
    fail_with_usage "${usage}"
    ;;
  esac
done
shift "$((OPTIND - 1))"

query_pattern="${*:-}"
if [ -z "${query_pattern}" ] ; then
  fail_with_usage "${usage}" "You must specify a query."
fi

# `-S`: follow symbolic links in recursive mode
# `--text`: https://utcc.utoronto.ca/~cks/space/blog/unix/GNUGrepForceText
GREP_OPTIONS="--ignore-case --text"
{{- if eq .chezmoi.os "darwin" }}
GREP_OPTIONS="${GREP_OPTIONS} --recursive -S"
{{- else if eq .chezmoi.os "linux" }}
GREP_OPTIONS="--dereference-recursive"
{{- end }}
export GREP_OPTIONS

files_with_matches() {
  null_arg=""
  if [ "${use_null_terminator}" = true ] ; then
    null_arg="--null"
  fi

  grep \
    --color=never \
    --files-with-matches \
    --regexp="${*}" ${null_arg} \
    "${HISTDIR}"
}

matches() {
  use_null_terminator=true

  files_with_matches "${*}" \
    | xargs -0 \
      grep \
        --regexp="${*}" \
        --color=always
}

sorter_path="${support_path}/histgrep_sort.rb"

# `ruby`: sort lines by file timestamp
if [ "${print_matches}" = true ] ; then
  # `sed`: remove directory name from output
  # `awk`: colorize filename and add space between colon and match
  results="$(
    matches "${query_pattern}" \
      | ruby --disable-gems "$sorter_path" \
      | sed s:"$HISTDIR/":: \
      | awk -F ':' -v VIOLET='\033[1;35m' -v RESET='\033[0m' \
        '{ print VIOLET $1 RESET FS " " substr($0, index($0, $2)) }'
  )"
else
  results="$(
    files_with_matches "${query_pattern}" \
      | ruby --disable-gems "$sorter_path"
  )"
fi

if [ "${reverse_results}" = true ] ; then
  results="$(echo "${results}" | perl -e "print reverse <>")"
fi

if [ -n "${maximum_results}" ] ; then
  echo "${results}" \
    | tail -n "${maximum_results}"
else
  echo "${results}"
fi
